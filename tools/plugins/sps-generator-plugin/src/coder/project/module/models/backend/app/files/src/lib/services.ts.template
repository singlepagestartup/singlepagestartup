  async create(props: { data: PgInsertValue<TableType> }) {
    const result = await services.create({
      db,
      Table,
      data: props.data,
      config,
    });

    return result;
  },

  async update(props: { id: string; data: PgInsertValue<TableType> }) {
    const { id, data } = props;

    const result = await services.update({
      id,
      db,
      Table,
      data,
      config,
    });

    return result;
  },

  async find(params?: { filter?: any }) {
    const result = await services.find({
      db,
      Table,
      config,
      filter: params?.filter,
    });

    return result;
  },

  async findById({ id }: { id: string }) {
    const result = await services.findById({
      id,
      db,
      Table,
      config,
    });

    return result;
  },

  async delete({ id }: { id: string }) {
    const result = await services.deleteEntity({
      id,
      db,
      Table,
      config,
    });

    return result;
  },
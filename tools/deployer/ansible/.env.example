# Project name without spaces, will be used as a prefix for all services
# AWS IAM doesn't allow spaces, underscores and other values in the name
# IAM will be created with this name
# S3 bucket will be created with this name
# minimum 6 characters
PROJECT_NAME=projectnamewithoutspaces

# Data for connecting to server
ANSIBLE_HOST=127.0.0.1
# Use only @#% as symbols
# because regex in GitHub Actions can't parse other symbols
ANSIBLE_PASSWORD=stro#g_p@55word

# Domain name, that will be used for the project, should be added to Cloudflare
# Don't forget to set SSL/TLS encryption mode to "Full (strict)"
DOMAIN=domain.com

# Cloudflare admin accout, that has the domain added
ROOT_CLOUDFLARE_ACCOUNT_EMAIL=admin@example.com
# Cloudflare API key, not Token
ROOT_CLOUDFLARE_ACCOUNT_API_KEY=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# AWS Variables that has permissions:
# - AmazonS3FullAccess
# - IAMFullAccess
ROOT_AWS_ACCESS_KEY_ID=XXXXXXXXXXXXXXXXXXXX
ROOT_AWS_SECRET_ACCESS_KEY=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# AWS S3 Variables
AWS_S3_BUCKET=projectnamewithoutspacesbucket
AWS_S3_REGION=eu-central-1

# Traefik Variables, will be used as basic auth for Traefik dashboard
TRAEFIK_USERNAME=code
TRAEFIK_PASSWORD=strong_password
TRAEFIK_SERVICE_SUBDOMAIN=traefik

# Postainer admin user, will be created on the first run
PORTAINER_USERNAME=code
PORTAINER_PASSWORD=very_strong_password
PORTAINER_SERVICE_SUBDOMAIN=portainer

# Postgres Database Variables
DATABASE_NAME=projectnamewithoutspaces
DATABASE_USERNAME=projectnamewithoutspaces
DATABASE_PASSWORD=postgres_strong_password

# Host Variables
HOST_SERVICE_NAME=host
# Host subdomain of $DOMAIN
# If you want to use root domain, leave it empty, just like this:
# HOST_SERVICE_SUBDOMAIN=
HOST_SERVICE_SUBDOMAIN=
HOST_DOCKER_HUB_REPOSITORY_NAME=dockerhub_account/dockerhub_repository
RBAC_JWT_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
RBAC_SECRET_KEY=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
RBAC_COOKIE_SESSION_SECRET=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# Docker Hub Variables
DOCKER_HUB_USERNAME=dockerhub_account
DOCKER_HUB_PASSWORD=dockerhub_password
DOCKER_HUB_URL=registry.hub.docker.com
DOCKER_HUB_LOGIN_USERNAME=dockerhub_account

# Token with write access to the repository
# Don't forget to turn on Codespaces, go to
# https://github.com/organizations/<your_organisation>/settings/codespaces
# And select "Codespaces access -> Enable for all members"
# Codespaces: Read and write
# Codespaces lifecycle admin: Read and write
# Codespaces metadata: Read-only
# Codespaces secrets: Read and write
# Contents: Read and write
# Metadata: Read-only
# Secrets: Read and write
# Variables: Read and write
GITHUB_TOKEN=github_pat_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
GITHUB_REPOSITORY=account/repository

# Sentry
# How to get API KEY read here
# https://docs.sentry.io/api/guides/create-auth-token
# PERMISSIONS
# Project: Admin
ROOT_SENTRY_API_KEY=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
# When you login to Sentry, you will go to
# https://yourproject.sentry.io/issues page
# "yourproject" in that link is organization slug
ROOT_SENTRY_ORGANIZATION_SLUG=yourproject
# Go to teams page
# https://yourproject.sentry.io/settings/teams/
# You will see the list of teams, go to one and copy name
# it will be after "#"
# something like that "#yourteam"
ROOT_SENTRY_TEAM_SLUG=yourteam

# To prevent seeding database in GitHub
# Sometimes github can't connect to database host
# in that case you need to run database seeding manually on server
# if SEED_ENTITIES=true, then database will be seeded on the server,
# you don't need to place that variable in .env file
AVOID_DATABASE_SEEDING=1

# Telegram bot
TELEGRAM_BOT_TOKEN=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
TELEGRAM_BOT_USERNAME=your_bot_name
# true / false
RUN_TELEGRAM_BOT=true

# Open AI
OPENAI_API_KEY=XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# Google Tag Manager
NEXT_PUBLIC_GOOGLE_TAG_MANAGER_ID=GTM-XXXXXXXX

# Stripe
STRIPE_API_KEY=sk_test_XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX

# 0x Processing
# https://0xprocessing.com
O_X_PROCESSING_SHOP_ID=true
O_X_PROCESSING_TEST_PAYMENTS=XXXXXXXXXX
O_X_PROCESSING_WEBHOOK_PASSWORD=XXXXXXXXXXXXXXXXX
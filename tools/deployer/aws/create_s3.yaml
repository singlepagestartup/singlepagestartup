---
- name: Create S3 bucket
  hosts: all
  become: yes
  vars:
    root_aws_access_key_id: "{{ ROOT_AWS_ACCESS_KEY_ID }}"
    root_aws_secret_access_key: "{{ ROOT_AWS_SECRET_ACCESS_KEY }}"
    aws_region: "{{ AWS_REGION }}"
    project_name: "{{ PROJECT_NAME }}"
    aws_s3_bucket_name: "{{ AWS_S3_BUCKET_NAME }}"
  tasks:
    - name: Check is S3 file exists
      stat:
        path: "/home/code/s3_bucket"
      register: s3_bucket_file

    - name: Create S3 bucket
      block:
        - name: Get ansible ansible_system_vendor
          set_fact:
            ansible_system_vendor: "{{ hostvars[inventory_hostname]['ansible_system_vendor'] }}"

        - name: If DigitalOcean
          block:
            - name: Install required Python packages
              pip:
                name: "{{ item }}"
                state: present
                virtualenv: /opt/venv
              loop:
                - boto
                - boto3
                - botocore
                - awscli
          when: ansible_system_vendor == "DigitalOcean"

        - name: If not DigitalOcean
          block:
            - name: Install required Python packages
              pip:
                name: "{{ item }}"
                state: present
                virtualenv: /opt/venv
              loop:
                - boto
                - boto3
                - botocore
                - awscli
          when: ansible_system_vendor != "DigitalOcean"

        - name: Create S3 bucket
          amazon.aws.s3_bucket:
            name: "{{ item }}"
            access_key: "{{ root_aws_access_key_id }}"
            secret_key: "{{ root_aws_secret_access_key }}"
            state: present
            region: "{{ aws_region }}"
            versioning: no
            object_ownership: BucketOwnerPreferred
            public_access:
              block_public_acls: false
              ignore_public_acls: false
              block_public_policy: false
              restrict_public_buckets: false
          loop:
            - "{{ aws_s3_bucket_name }}"
            - "{{ aws_s3_bucket_name }}dev"

        - name: Create S3 name file
          copy:
            content: "{{ item.content }}"
            dest: "/home/code/{{ item.name }}.env"
            mode: 0600
          loop:
            - { name: "s3_bucket", content: "{{ aws_s3_bucket_name }}" }
            - { name: "s3_bucket_dev", content: "{{ aws_s3_bucket_name }}dev" }

        - name: Set CORS permissions
          community.aws.s3_cors:
            name: "{{ item }}"
            access_key: "{{ root_aws_access_key_id }}"
            secret_key: "{{ root_aws_secret_access_key }}"
            state: present
            rules:
              - allowed_origins:
                  - "*"
                allowed_methods:
                  - GET
                  - HEAD
                allowed_headers:
                  - "*"
                max_age_seconds: 30000
          loop:
            - "{{ aws_s3_bucket_name }}"
            - "{{ aws_s3_bucket_name }}dev"
      when: s3_bucket_file.stat.exists == False

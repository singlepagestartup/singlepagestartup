#!/bin/bash
. ./get_environment_type.sh

get_environment_type $2

./create_inventory.sh

. ./get_env.sh

DOMAIN=$(get_env "$BASH_SOURCE" "DOMAIN")

API_SERVICE_SUBDOMAIN=$(get_env "$BASH_SOURCE" "API_SERVICE_SUBDOMAIN")

SERVICE_NAME=$(get_env "$BASH_SOURCE" "HOST_SERVICE_NAME")
SERVICE_SUBDOMAIN=$(get_env "$BASH_SOURCE" "HOST_SERVICE_SUBDOMAIN")

PORTAINER_USERNAME=$(get_env "$BASH_SOURCE" "PORTAINER_USERNAME")
PORTAINER_PASSWORD=$(get_env "$BASH_SOURCE" "PORTAINER_PASSWORD")
PORTAINER_SERVICE_SUBDOMAIN=$(get_env "$BASH_SOURCE" "PORTAINER_SERVICE_SUBDOMAIN")

PAYSELECTION_SECRET_KEY=$(get_env "$BASH_SOURCE" "PAYSELECTION_SECRET_KEY")
PAYSELECTION_SITE_ID=$(get_env "$BASH_SOURCE" "PAYSELECTION_SITE_ID")
PAYSELECTION_SITE_NAME=$(get_env "$BASH_SOURCE" "PAYSELECTION_SITE_NAME")
PAYSELECTION_PUBLIC_KEY=$(get_env "$BASH_SOURCE" "PAYSELECTION_PUBLIC_KEY")
PAYSELECTION_WEBHOOK_URL=$(get_env "$BASH_SOURCE" "PAYSELECTION_WEBHOOK_URL")

GOOGLE_TAG_MANAGER_ID=$(get_env "$BASH_SOURCE" "GOOGLE_TAG_MANAGER_ID")
GOOGLE_ANALYTICS_ID=$(get_env "$BASH_SOURCE" "GOOGLE_ANALYTICS_ID")

DOCKER_HUB_URL=$(get_env "$BASH_SOURCE" "DOCKER_HUB_URL")
DOCKER_HUB_SERVICE_REPOSITORY=$(get_env "$BASH_SOURCE" "HOST_SERVICE_DOCKER_HUB_REPOSITORY_NAME")

GITHUB_TOKEN=$(get_env "$BASH_SOURCE" "GITHUB_TOKEN")
GITHUB_REPOSITORY=$(get_env "$BASH_SOURCE" "GITHUB_REPOSITORY")

PORTAINER_URL=$PORTAINER_SERVICE_SUBDOMAIN.$DOMAIN

if [ -z "$API_SERVICE_SUBDOMAIN" ]
then
    API_SERVICE_URL=$DOMAIN
else
    API_SERVICE_URL=$API_SERVICE_SUBDOMAIN.$DOMAIN
fi

if [ -z "$SERVICE_SUBDOMAIN" ]
then
    SERVICE_A="@"
    SERVICE_URL=$DOMAIN
else 
    SERVICE_A=$SERVICE_SUBDOMAIN
    SERVICE_URL=$SERVICE_SUBDOMAIN.$DOMAIN
fi

if [ -z $SERVICE_NAME ]
then
    echo "Skip $0"
    exit 0
fi

if [ -z $DOCKER_HUB_SERVICE_REPOSITORY ]
then
    echo "No docker hub repository name for service $SERVICE_NAME"
    exit 0
fi

if [ "$1" != "down" ]
then
    # ./sentry.sh up $SERVICE_NAME javascript-react NEXT_PUBLIC_SENTRY_DSN && \
    ./domain.sh present $SERVICE_URL $SERVICE_A && \
    ansible-playbook \
        ./host/create_host.yaml \
        -e "SERVICE_NAME=$SERVICE_NAME \
            PORTAINER_URL=$PORTAINER_URL \
            PORTAINER_USERNAME=$PORTAINER_USERNAME \
            PORTAINER_PASSWORD=$PORTAINER_PASSWORD \
            API_SERVICE_URL=$API_SERVICE_URL \
            DOCKER_HUB_URL=$DOCKER_HUB_URL \
            DOCKER_HUB_SERVICE_REPOSITORY=$DOCKER_HUB_SERVICE_REPOSITORY \
            PAYSELECTION_SECRET_KEY=$PAYSELECTION_SECRET_KEY \
            PAYSELECTION_SITE_ID=$PAYSELECTION_SITE_ID \
            PAYSELECTION_SITE_NAME=$PAYSELECTION_SITE_NAME \
            PAYSELECTION_PUBLIC_KEY=$PAYSELECTION_PUBLIC_KEY \
            PAYSELECTION_WEBHOOK_URL=$PAYSELECTION_WEBHOOK_URL \
            GOOGLE_TAG_MANAGER_ID=$GOOGLE_TAG_MANAGER_ID \
            GOOGLE_ANALYTICS_ID=$GOOGLE_ANALYTICS_ID \
            SERVICE_URL=$SERVICE_URL \
            ENVIRONMENT_TYPE=$ENVIRONMENT_TYPE" && \
    ansible-playbook \
        ./host/fill_github.yaml \
        -e "GITHUB_TOKEN=$GITHUB_TOKEN \
            API_SERVICE_URL=$API_SERVICE_URL \
            GITHUB_REPOSITORY=$GITHUB_REPOSITORY \
            PORTAINER_URL=$PORTAINER_URL \
            SERVICE_URL=$SERVICE_URL \
            ENVIRONMENT_TYPE=$ENVIRONMENT_TYPE"
else
    ansible-playbook \
        ./host/clear_github.yaml \
        -e "GITHUB_TOKEN=$GITHUB_TOKEN \
            GITHUB_REPOSITORY=$GITHUB_REPOSITORY \
            ENVIRONMENT_TYPE=$ENVIRONMENT_TYPE" && \
    ansible-playbook \
        ./host/delete_host.yaml \
        -e "SERVICE_NAME=$SERVICE_NAME" && \
    ./domain.sh down $SERVICE_URL $SERVICE_A
    # ./sentry.sh down $SERVICE_NAME NEXT_PUBLIC_SENTRY_DSN
fi
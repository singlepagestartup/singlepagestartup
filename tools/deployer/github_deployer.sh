#!/bin/bash
. ./get_environment_type.sh

get_environment_type $2

./create_inventory.sh

. ./get_env.sh

ANSIBLE_HOST=$(get_env "$BASH_SOURCE" "ANSIBLE_HOST")
ANSIBLE_USER=$(get_env "$BASH_SOURCE" "ANSIBLE_USER")
ANSIBLE_PASSWORD=$(get_env "$BASH_SOURCE" "ANSIBLE_PASSWORD")

ROOT_AWS_ACCESS_KEY_ID=$(get_env "$BASH_SOURCE" "ROOT_AWS_ACCESS_KEY_ID")
ROOT_AWS_SECRET_ACCESS_KEY=$(get_env "$BASH_SOURCE" "ROOT_AWS_SECRET_ACCESS_KEY")
AWS_S3_BUCKET_NAME=$(get_env "$BASH_SOURCE" "AWS_S3_BUCKET_NAME")
AWS_REGION=$(get_env "$BASH_SOURCE" "AWS_REGION")
AWS_SES_FROM_EMAIL=$(get_env "$BASH_SOURCE" "AWS_SES_FROM_EMAIL")

ROOT_CLOUDFLARE_ACCOUNT_API_KEY=$(get_env "$BASH_SOURCE" "ROOT_CLOUDFLARE_ACCOUNT_API_KEY")
ROOT_CLOUDFLARE_ACCOUNT_EMAIL=$(get_env "$BASH_SOURCE" "ROOT_CLOUDFLARE_ACCOUNT_EMAIL")

ROOT_SENTRY_API_KEY=$(get_env "$BASH_SOURCE" "ROOT_SENTRY_API_KEY")
ROOT_SENTRY_ORGANIZATION_SLUG=$(get_env "$BASH_SOURCE" "ROOT_SENTRY_ORGANIZATION_SLUG")
ROOT_SENTRY_TEAM_SLUG=$(get_env "$BASH_SOURCE" "ROOT_SENTRY_TEAM_SLUG")

DOMAIN=$(get_env "$BASH_SOURCE" "DOMAIN")

RBAC_JWT_SECRET=$(get_env "$BASH_SOURCE" "RBAC_JWT_SECRET")
RBAC_SECRET_KEY=$(get_env "$BASH_SOURCE" "RBAC_SECRET_KEY")
RBAC_COOKIE_SESSION_SECRET=$(get_env "$BASH_SOURCE" "RBAC_COOKIE_SESSION_SECRET")

DATABASE_NAME=$(get_env "$BASH_SOURCE" "DATABASE_NAME")
DATABASE_USERNAME=$(get_env "$BASH_SOURCE" "DATABASE_USERNAME")
DATABASE_PASSWORD=$(get_env "$BASH_SOURCE" "DATABASE_PASSWORD")

REDIS_PASSWORD=$(get_env "$BASH_SOURCE" "REDIS_PASSWORD")
REDIS_PORT=$(get_env "$BASH_SOURCE" "REDIS_PORT")

PORTAINER_USERNAME=$(get_env "$BASH_SOURCE" "PORTAINER_USERNAME")
PORTAINER_PASSWORD=$(get_env "$BASH_SOURCE" "PORTAINER_PASSWORD")
PORTAINER_SERVICE_SUBDOMAIN=$(get_env "$BASH_SOURCE" "PORTAINER_SERVICE_SUBDOMAIN")

TRAEFIK_USERNAME=$(get_env "$BASH_SOURCE" "TRAEFIK_USERNAME")
TRAEFIK_PASSWORD=$(get_env "$BASH_SOURCE" "TRAEFIK_PASSWORD")
TRAEFIK_SERVICE_SUBDOMAIN=$(get_env "$BASH_SOURCE" "TRAEFIK_SERVICE_SUBDOMAIN")

API_SERVICE_NAME=$(get_env "$BASH_SOURCE" "API_SERVICE_NAME")
API_SERVICE_SUBDOMAIN=$(get_env "$BASH_SOURCE" "API_SERVICE_SUBDOMAIN")
API_SERVICE_DOCKER_HUB_REPOSITORY_NAME=$(get_env "$BASH_SOURCE" "API_SERVICE_DOCKER_HUB_REPOSITORY_NAME")

HOST_SERVICE_NAME=$(get_env "$BASH_SOURCE" "HOST_SERVICE_NAME")
HOST_SERVICE_SUBDOMAIN=$(get_env "$BASH_SOURCE" "HOST_SERVICE_SUBDOMAIN")
HOST_SERVICE_DOCKER_HUB_REPOSITORY_NAME=$(get_env "$BASH_SOURCE" "HOST_SERVICE_DOCKER_HUB_REPOSITORY_NAME")

GITHUB_TOKEN=$(get_env "$BASH_SOURCE" "GITHUB_TOKEN")
GITHUB_REPOSITORY=$(get_env "$BASH_SOURCE" "GITHUB_REPOSITORY")

STRIPE_SECRET_KEY=$(get_env "$BASH_SOURCE" "STRIPE_SECRET_KEY")

O_X_PROCESSING_TEST_PAYMENTS=$(get_env "$BASH_SOURCE" "O_X_PROCESSING_TEST_PAYMENTS")
O_X_PROCESSING_SHOP_ID=$(get_env "$BASH_SOURCE" "O_X_PROCESSING_SHOP_ID")
O_X_PROCESSING_WEBHOOK_PASSWORD=$(get_env "$BASH_SOURCE" "O_X_PROCESSING_WEBHOOK_PASSWORD")

PAYSELECTION_SECRET_KEY=$(get_env "$BASH_SOURCE" "PAYSELECTION_SECRET_KEY")
PAYSELECTION_SITE_ID=$(get_env "$BASH_SOURCE" "PAYSELECTION_SITE_ID")
PAYSELECTION_SITE_NAME=$(get_env "$BASH_SOURCE" "PAYSELECTION_SITE_NAME")
PAYSELECTION_PUBLIC_KEY=$(get_env "$BASH_SOURCE" "PAYSELECTION_PUBLIC_KEY")
PAYSELECTION_WEBHOOK_URL=$(get_env "$BASH_SOURCE" "PAYSELECTION_WEBHOOK_URL")

GOOGLE_TAG_MANAGER_ID=$(get_env "$BASH_SOURCE" "GOOGLE_TAG_MANAGER_ID")
GOOGLE_ANALYTICS_ID=$(get_env "$BASH_SOURCE" "GOOGLE_ANALYTICS_ID")

SECRETS=(\
    "ANSIBLE_HOST $ANSIBLE_HOST" \
    "ANSIBLE_USER $ANSIBLE_USER" \
    "ANSIBLE_PASSWORD $ANSIBLE_PASSWORD" \
    "ROOT_AWS_ACCESS_KEY_ID $ROOT_AWS_ACCESS_KEY_ID" \
    "ROOT_AWS_SECRET_ACCESS_KEY $ROOT_AWS_SECRET_ACCESS_KEY" \
    "ROOT_CLOUDFLARE_ACCOUNT_API_KEY $ROOT_CLOUDFLARE_ACCOUNT_API_KEY" \
    "ROOT_CLOUDFLARE_ACCOUNT_EMAIL $ROOT_CLOUDFLARE_ACCOUNT_EMAIL" \
    "ROOT_SENTRY_API_KEY $ROOT_SENTRY_API_KEY" \
    "ROOT_SENTRY_ORGANIZATION_SLUG $ROOT_SENTRY_ORGANIZATION_SLUG" \
    "ROOT_SENTRY_TEAM_SLUG $ROOT_SENTRY_TEAM_SLUG" \
    "DOMAIN $DOMAIN" \
    "RBAC_JWT_SECRET $RBAC_JWT_SECRET" \
    "RBAC_SECRET_KEY $RBAC_SECRET_KEY" \
    "RBAC_COOKIE_SESSION_SECRET $RBAC_COOKIE_SESSION_SECRET" \
    "AWS_S3_BUCKET_NAME $AWS_S3_BUCKET_NAME" \
    "AWS_REGION $AWS_REGION" \
    "AWS_SES_FROM_EMAIL $AWS_SES_FROM_EMAIL" \
    "DATABASE_NAME $DATABASE_NAME" \
    "DATABASE_USERNAME $DATABASE_USERNAME" \
    "DATABASE_PASSWORD $DATABASE_PASSWORD" \
    "REDIS_PASSWORD $REDIS_PASSWORD" \
    "REDIS_PORT $REDIS_PORT" \
    "PORTAINER_USERNAME $PORTAINER_USERNAME" \
    "PORTAINER_PASSWORD $PORTAINER_PASSWORD" \
    "PORTAINER_SERVICE_SUBDOMAIN $PORTAINER_SERVICE_SUBDOMAIN" \
    "TRAEFIK_USERNAME $TRAEFIK_USERNAME" \
    "TRAEFIK_PASSWORD $TRAEFIK_PASSWORD" \
    "TRAEFIK_SERVICE_SUBDOMAIN $TRAEFIK_SERVICE_SUBDOMAIN" \
    "API_SERVICE_NAME $API_SERVICE_NAME" \
    "API_SERVICE_SUBDOMAIN $API_SERVICE_SUBDOMAIN" \
    "API_SERVICE_DOCKER_HUB_REPOSITORY_NAME $API_SERVICE_DOCKER_HUB_REPOSITORY_NAME" \
    "HOST_SERVICE_NAME $HOST_SERVICE_NAME" \
    "HOST_SERVICE_SUBDOMAIN $HOST_SERVICE_SUBDOMAIN" \
    "HOST_SERVICE_DOCKER_HUB_REPOSITORY_NAME $HOST_SERVICE_DOCKER_HUB_REPOSITORY_NAME" \
    "GH_TOKEN $GITHUB_TOKEN" \
    "STRIPE_SECRET_KEY $STRIPE_SECRET_KEY" \
    "O_X_PROCESSING_TEST_PAYMENTS $O_X_PROCESSING_TEST_PAYMENTS" \
    "O_X_PROCESSING_SHOP_ID $O_X_PROCESSING_SHOP_ID" \
    "O_X_PROCESSING_WEBHOOK_PASSWORD $O_X_PROCESSING_WEBHOOK_PASSWORD" \
    "PAYSELECTION_SECRET_KEY $PAYSELECTION_SECRET_KEY" \
    "PAYSELECTION_SITE_ID $PAYSELECTION_SITE_ID" \
    "PAYSELECTION_SITE_NAME $PAYSELECTION_SITE_NAME" \
    "PAYSELECTION_PUBLIC_KEY $PAYSELECTION_PUBLIC_KEY" \
    "PAYSELECTION_WEBHOOK_URL $PAYSELECTION_WEBHOOK_URL" \
    "GOOGLE_TAG_MANAGER_ID $GOOGLE_TAG_MANAGER_ID" \
    "GOOGLE_ANALYTICS_ID $GOOGLE_ANALYTICS_ID" \
)

if [ -z "$ENVIRONMENT_TYPE" ]; then
    BRANCHES=( \
        "ansible-up" \
        "ansible-down" \
    )
else
    ENVIRONMENT_TYPE_LOWER=$(echo "$ENVIRONMENT_TYPE" | tr '[:upper:]' '[:lower:]')
    BRANCHES=( \
        "ansible-up-${ENVIRONMENT_TYPE_LOWER}" \
        "ansible-down-${ENVIRONMENT_TYPE_LOWER}" \
    )
fi

PREFIX=""
if [ ! -z "$ENVIRONMENT_TYPE" ]
then
    PREFIX="${ENVIRONMENT_TYPE}_"
fi

if [ "$1" != "down" ]
then
    cd ./github/github-node-api && npm install && cd ../..

    for i in "${BRANCHES[@]}"
    do
        BRANCH_NAME=$i
        node ./github/github-node-api/create_branch.js \
            $GITHUB_TOKEN \
            $GITHUB_REPOSITORY \
            $BRANCH_NAME
    done

    for i in "${SECRETS[@]}"
    do
        SECRET_NAME="${i%% *}"
        SECRET_CONTENT="${i#* }"

        if [ ! -z $SECRET_CONTENT ]
        then
            node ./github/github-node-api/create_secret.js \
                $GITHUB_TOKEN \
                $GITHUB_REPOSITORY \
                "${PREFIX}${SECRET_NAME}" \
                $SECRET_CONTENT
        fi
    done
else
    cd ./github/github-node-api && npm install && cd ../..

    for i in "${SECRETS[@]}"
    do
        SECRET_NAME="${i%% *}"
        SECRET_CONTENT="${i#* }"

        node ./github/github-node-api/delete_secret.js \
            $GITHUB_TOKEN \
            $GITHUB_REPOSITORY \
            "${PREFIX}${SECRET_NAME}"
    done
fi